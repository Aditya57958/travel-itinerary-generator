{
    "sourceFile": "app1.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1758877354575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758879009193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,14 @@\n import gradio as gr\r\n import requests\r\n-from pyngrok import ngrok\r\n-import os\r\n+from pyngrok import ngrok, conf\r\n+import sys\r\n \r\n-# Step 1: Start ngrok tunnel for Langflow running on localhost:7860\r\n-public_url = ngrok.connect(7860).public_url\r\n-print(f\"üöÄ Langflow public URL: {public_url}\")\r\n+# Configure ngrok\r\n+conf.get_default().auth_token = \"2rvlP8AgOfAVeTPRTxX7eQsXHYN_63XAA8pw8ZvMaucoYyJxJ\"\r\n \r\n-import gradio as gr\r\n-import requests\r\n-from pyngrok import ngrok\r\n-import time\r\n-import sys\r\n+# API Configuration\r\n+api_key = \"sk-igUDB1syx8WueaauQk6R5p6wwL0hzdB8eeGsZuZG3Xw\"\r\n \r\n def check_langflow_server():\r\n     \"\"\"Check if Langflow server is running locally\"\"\"\r\n     try:\r\n@@ -37,17 +33,13 @@\n     print(\"‚ùå Error: Langflow server is not running!\")\r\n     print(\"Please start Langflow server first with: python -m langflow\")\r\n     sys.exit(1)\r\n \r\n-# Setup ngrok\r\n+# Setup ngrok tunnel\r\n ngrok_url = setup_ngrok()\r\n if not ngrok_url:\r\n     print(\"‚ùå Failed to create ngrok tunnel\")\r\n     sys.exit(1)\r\n-\r\n-# API Configuration\r\n-api_key = \"sk-igUDB1syx8WueaauQk6R5p6wwL0hzdB8eeGsZuZG3Xw\"\r\n-# Replace localhost with the ngrok public URL\r\n # Update URL to use ngrok tunnel\r\n url = f\"{ngrok_url}/api/v1/run/866fbfbc-2186-4ff9-b520-e452fd54d529\"\r\n \r\n def create_travel_plan(input_text):\r\n"
                },
                {
                    "date": 1758879123471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import gradio as gr\r\n import requests\r\n from pyngrok import ngrok, conf\r\n-import sys\r\n-\r\n+import sys# Start the Gradio interface on a different port\r\n+demo.launch(server_name=\"0.0.0.0\", server_port=7861, ssr_mode=False)\r\n # Configure ngrok\r\n conf.get_default().auth_token = \"2rvlP8AgOfAVeTPRTxX7eQsXHYN_63XAA8pw8ZvMaucoYyJxJ\"\r\n \r\n # API Configuration\r\n"
                }
            ],
            "date": 1758877354575,
            "name": "Commit-0",
            "content": "import gradio as gr\r\nimport requests\r\nfrom pyngrok import ngrok\r\nimport os\r\n\r\n# Step 1: Start ngrok tunnel for Langflow running on localhost:7860\r\npublic_url = ngrok.connect(7860).public_url\r\nprint(f\"üöÄ Langflow public URL: {public_url}\")\r\n\r\nimport gradio as gr\r\nimport requests\r\nfrom pyngrok import ngrok\r\nimport time\r\nimport sys\r\n\r\ndef check_langflow_server():\r\n    \"\"\"Check if Langflow server is running locally\"\"\"\r\n    try:\r\n        response = requests.get(\"http://localhost:7860/health\")\r\n        return response.status_code == 200\r\n    except requests.exceptions.ConnectionError:\r\n        return False\r\n\r\ndef setup_ngrok():\r\n    \"\"\"Setup ngrok tunnel for Langflow server\"\"\"\r\n    try:\r\n        # Start ngrok tunnel to Langflow server\r\n        public_url = ngrok.connect(7860).public_url\r\n        print(f\"üöÄ Langflow public URL: {public_url}\")\r\n        return public_url\r\n    except Exception as e:\r\n        print(f\"‚ùå Error setting up ngrok: {e}\")\r\n        sys.exit(1)\r\n\r\n# Check if Langflow is running\r\nif not check_langflow_server():\r\n    print(\"‚ùå Error: Langflow server is not running!\")\r\n    print(\"Please start Langflow server first with: python -m langflow\")\r\n    sys.exit(1)\r\n\r\n# Setup ngrok\r\nngrok_url = setup_ngrok()\r\nif not ngrok_url:\r\n    print(\"‚ùå Failed to create ngrok tunnel\")\r\n    sys.exit(1)\r\n\r\n# API Configuration\r\napi_key = \"sk-igUDB1syx8WueaauQk6R5p6wwL0hzdB8eeGsZuZG3Xw\"\r\n# Replace localhost with the ngrok public URL\r\n# Update URL to use ngrok tunnel\r\nurl = f\"{ngrok_url}/api/v1/run/866fbfbc-2186-4ff9-b520-e452fd54d529\"\r\n\r\ndef create_travel_plan(input_text):\r\n    payload = {\r\n        \"output_type\": \"chat\",\r\n        \"input_type\": \"chat\",\r\n        \"input_value\": input_text\r\n    }\r\n    headers = {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-api-key\": api_key\r\n    }\r\n    try:\r\n        response = requests.post(url, json=payload, headers=headers)\r\n        response.raise_for_status()\r\n        return response.text\r\n    except requests.exceptions.RequestException as e:\r\n        return f\"Error making API request: {e}\"\r\n    except ValueError as e:\r\n        return f\"Error parsing response: {e}\"\r\n\r\n# Gradio UI\r\nwith gr.Blocks(title=\"Aditya's Travel Agency\") as demo:\r\n    gr.Markdown(\"<h1 style='text-align:center'>Make Your Travel Plan with Aditya's Travel Agency ‚úàÔ∏è</h1>\")\r\n    \r\n    with gr.Row():\r\n        input_text = gr.Textbox(\r\n            label=\"Enter your travel preferences and details\",\r\n            placeholder=\"E.g., Trip from S√£o Paulo to Uberl√¢ndia, MG on August 23, 2024. Enjoys beer, p√£o de queijo, coffee...\"\r\n        )\r\n    \r\n    output_text = gr.Textbox(\r\n        label=\"Your Travel Itinerary\",\r\n        placeholder=\"Your itinerary will appear here\",\r\n        interactive=False\r\n    )\r\n    \r\n    submit_btn = gr.Button(\"Create Travel Plan\")\r\n    submit_btn.click(fn=create_travel_plan, inputs=input_text, outputs=output_text)\r\n\r\n# Step 2: Launch Gradio UI (no share=True since Hugging Face doesn‚Äôt allow it)\r\ndemo.launch(server_name=\"0.0.0.0\", server_port=7860, ssr_mode=False)\r\n"
        }
    ]
}